/* --- A. BASE STYLES & SCENE CONTAINERS --- */
html, body {
    height: 100%; 
    margin: 0; 
    padding: 0; 
    background-color: #1b1b1b; 
    /* The height/width of the canvas */
}
#scene-container {
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    position: relative;
}

/* Layer 1: Backgrounds */
.castle-background,
.wisteria-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    transition: opacity 1s ease;
    z-index: 1; /* Lowest layer */
}
.castle-background {
    background-image: url('castlep.jpg');
}
.wisteria-background {
    background-image: url('wisteria.jpg');
    opacity: 0;
}

/* Layer 2: Falling Character */
#player {
    position: absolute;
    top: -150px; 
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    transition: top 3s ease-in; 
}
.character {
    width: 150px;
    height: auto;
}

/* --- B. NAKIME UI CONTROLS (Restored and Centered) --- */

/* Layer 3: Main Game UI Container (Holds Nakime and Buttons) */
.castle-container {
    /* Centering Fix: Absolute positioning in the middle of the viewport */
    position: absolute; 
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); 
    
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    /* Use bgg.jpg for the initial game background */
    background-image: url(bgg.jpg); 
    background-size: auto 100%; 
    background-repeat: repeat-x; 
    background-position: 0 0;
    transition: background-position 0.1s ease-out, opacity 1s ease; 
    z-index: 20; /* Above the backgrounds */
}

/* Nakime Image and Tilt (Restored) */
.player {
    position: relative;
    width: 300px;
    /* Use margin auto to center player horizontally within its container */
    margin: 50px auto; 
    transition: opacity 5s ease;
    z-index: 21;
}

.nakime {
    width: 100%;
    display: block;
    transition: transform 0.1s;
}

.nakime.play-left {
    /* Nakime's subtle rotation */
    transform: translate(-5px, -5px) rotate(-5deg);
}

.nakime.play-right {
    /* Nakime's subtle rotation */
    transform: translate(5px, -5px) rotate(5deg);
}

/* Paw Visuals */
.paw {
    position: absolute;
    width: 60px;
    height: 60px;
    transition: transform 0.1s;
}

.paw-left {
    left: 50px;
    bottom: 20px;
}

.paw-right {
    right: 50px;
    bottom: 20px;
}

.pressed {
    transform: translateY(20px);
}

/* Button Container */
.button {
    text-align: center;
    margin-top: 20px;
    transition: opacity 1s ease;
}

/* Custom Button Styling (Restored Colors and Hover) */
button {
    padding: 10px 20px;
    font-size: 18px;
    margin: 0 10px;
    cursor: pointer;
    border-radius: 100px;
    background-color: #c19e12; /* RESTORED COLOR */
    color: #1b1b1b;
    font-family: 'Montserrat', serif;
    border: 2px solid #f1c40f;
    border-radius: 8px;
    transition: all 0.3s ease;
    box-shadow: 0 0 10px rgba(241, 196, 15, 0.3);
}

button:active {
    box-shadow: 0 0 10px #f1c40f;
    transform: scale(0.97);
}

button:hover {
    color: #F1C40F;
    background-color: transparent;
    border: 2px solid #F1C40F;
    box-shadow: 0 0 10px #3f3406, 0 0 40px #a08a31, 0 0 60px #9d7f05e3;
}


/* --- CSS for Firework Container --- */
#fireworks-display {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: 40; /* Highest layer */
    /* Center the GIF within the viewport */
    display: flex;
    justify-content: center;
    align-items: center;
}

/* --- CSS for the GIF Image --- */
#firework-gif {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
/* Hide utility class */
.hidden {
    display: none;
}

/* --- New CSS for Curtains --- */

/* Base Style: Start Open (covering the screen, but transparent) */
.curtain-panel {
    position: fixed; /* Fixed to cover the whole viewport */
    top: 0;
    width: 50vw;
    height: 100vh;
    background-color: #3b0000; /* Deep red/velvet color */
    z-index: 100; /* Must be higher than fireworks (z-index 40) */
    transition: transform 1.2s ease-in-out; /* Smooth closing transition */
    overflow: hidden;

    background-image: 
        repeating-linear-gradient(
            to right,
            rgba(0,0,0,0.1) 0px,      /* Darker shadow for fold */
            rgba(0,0,0,0.1) 3px,
            transparent 3px,
            transparent 15px,       /* Lighter section */
            rgba(0,0,0,0.1) 15px,     /* Darker shadow for fold */
            rgba(0,0,0,0.1) 18px,
            transparent 18px,
            transparent 30px        /* Repeat every 30px for a fold */
        );
    background-size: 30px 100%;
}

.curtain-left { 
    left: 0; 
    transform: translateX(-100%); /* Start off-screen (open) */
    border-right: 2px solid #a07a00; /* Optional: Gold trim on the closing edge */
    box-shadow: 2px 0 10px rgba(0,0,0,0.5);
}
.curtain-right { 
    right: 0; 
    transform: translateX(100%); /* Start off-screen (open) */
    border-left: 2px solid #a07a00; /* Optional: Gold trim on the closing edge */
    box-shadow: -2px 0 10px rgba(0,0,0,0.5);
}

/* 1. STATE 1: Closing the Curtains (The Transition) */
.curtain-panel.close {
    transform: translateX(0); /* Slides panel back to cover its half of the screen */
}

/* 2. STATE 2: Opening the Curtains (The reveal for Act 4) */
.curtain-panel.open-wide {
    transform: translateX(-100%); /* Left panel moves off-screen left */
}
.curtain-panel.curtain-right.open-wide {
    transform: translateX(100%); /* Right panel moves off-screen right */
}

/* Utility to hide them completely until the first close sequence */
.curtain-panel.hidden {
    display: none;
}